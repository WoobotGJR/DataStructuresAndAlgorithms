package org.woobolt.algorithms.sorting;

public class ShellSort {
    private long[] theArray;          // ref to array theArray
    private int nElems;               // number of data items

    public void insert(long value)    // put element into array
    {
        theArray[nElems] = value;      // insert it
        nElems++;                      // increment size
    }

    public void display()             // displays array contents
    {
        System.out.print("A=");
        for(int j=0; j<nElems; j++)    // for each element,
            System.out.print(theArray[j] + " ");  // display it
        System.out.println("");
    }

    public void shellSort()
    {
        int inner, outer;
        long temp;

        int h = 1;                     // find initial value of h
        while(h <= nElems/3)
            h = h*3 + 1;                // (1, 4, 13, 40, 121, ...)

        // end while(h>0)
        while(h>0)                     // decreasing h, until h=1
        {
            // h-sort the file
            for(outer=h; outer<nElems; outer++)
            {
                temp = theArray[outer];
                inner = outer;

                while(inner > h-1 && theArray[inner-h] >=  temp)
                {
                    theArray[inner] = theArray[inner-h];
                    inner -= h;
                }
                theArray[inner] = temp;
            }  // end for
            h = (h-1) / 3;              // decrease h
        }
    }
}

/*
Сортировка Шелла - это усовершенствованный вариант сортировки вставками. В отличие от сортировки вставками, где элементы
сравниваются и перемещаются на одну позицию за раз, сортировка Шелла использует так называемые "инкременты" (шаги),
чтобы перемещать элементы на более значительные расстояния. Это позволяет более быстро размещать элементы в
их окончательных позициях.

Основные шаги алгоритма сортировки Шелла:

Выбор инкрементов: Сначала выбираются значения шагов, обычно последовательность чисел, которая заканчивается на 1
(например, последовательность Седжвика или последовательность Пратта).

Сортировка с использованием инкрементов: Массив разбивается на подмассивы, каждый из которых сортируется отдельно с
использованием сортировки вставками, применяемой к элементам, находящимся на расстоянии шага друг от друга.

Поэтапное уменьшение шага: После сортировки с использованием текущего значения шага шаг уменьшается, и процесс
повторяется. Этот процесс продолжается до тех пор, пока шаг не станет равным 1.

Финальная сортировка вставками: Когда шаг становится равным 1, алгоритм выполняет финальную сортировку вставками, что
позволяет дополнительно улучшить порядок элементов.

Сортировка Шелла обладает хорошей эффективностью в среднем и лучше производительностью, чем обычная сортировка
вставками, но она не является самой быстрой сортировкой. Однако она примечательна тем, что является относительно
простой и не требует дополнительной памяти.
*/
/*

При использовании сортировки Шелла с последовательностью инкрементов, заканчивающейся на 1, каждый элемент будет
перемещаться на определенное расстояние (инкремент) на каждой итерации.

На первой итерации элементы разделены на подмассивы, где элементы, находящиеся на расстоянии инкремента друг от друга,
сортируются между собой. Даже если элементы не находятся в их "окончательном" месте, они будут перемещены ближе к
своему правильному местоположению.

После первой итерации каждый элемент будет находиться на расстоянии инкремента от своего окончательного места. На
следующих итерациях сортировки Шелла используются меньшие инкременты, что позволяет элементам дальше приближаться к
своему финальному положению.

Таким образом, после нескольких итераций элементы будут находиться на близких расстояниях от своих правильных
позиций, что приводит к тому, что элементы "приближаются" к своим финальным местоположениям с каждой итерацией.
В результате элементы могут находиться не более чем на нескольких позициях от своих окончательных мест.
*/
