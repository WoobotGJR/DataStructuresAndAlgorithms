package org.woobolt.dfs;

public class DfsVertex {
    private char label; // метка А например
    public boolean wasVisited;

    public DfsVertex(final char label) {
        this.label = label;
        wasVisited = false;
    }

    public char getLabel() {
        return this.label;
    }

    public boolean isWasVisited() {
        return this.wasVisited;
    }

    /*
     * Использование final boolean wasVisited означает, что значение переменной
     * wasVisited также не может быть изменено после ее установки.
     */
    public void setWasVisited(final boolean wasVisited) {
        this.wasVisited = wasVisited;
    }
}

/*
 * В Java ключевое слово final, когда применено к переменной, означает, что
 * значение этой переменной не может быть изменено после ее инициализации. В
 * данном случае, final char label означает, что значение переменной label
 * устанавливается один раз при создании объекта класса Vertex и не может быть
 * изменено после этого.
 *
 * Использование final в данном контексте может иметь несколько причин:
 *
 * Гарантировать неизменяемость метки вершины после ее установки. Это может быть
 * полезно, если разработчик хочет обеспечить непререкаемость состояния объекта
 * Vertex. Улучшить безопасность кода и избежать случайного изменения метки
 * вершины в других частях кода. Оптимизировать работу с объектами, поскольку
 * компилятор может провести дополнительные оптимизации, зная, что переменная
 * label не изменится после инициализации.
 *
 * Таким образом, использование final char label гарантирует, что метка вершины
 * остается неизменной после ее инициализации, что может быть полезно в
 * контексте данной программы, особенно если метка вершины не должна меняться в
 * процессе ее жизни.
 */